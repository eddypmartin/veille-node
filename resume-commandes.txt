Creation

Cloner un dépôt «repository» existant
$ git clone ssh://user@domain.com/repo.git


Créer un nouveau dépôt
$git init
/////

Changement local
Les fichiers modifié dans le répertoire de travail
$ git status

Les changements sur les fichier ciblés
$ git diff

Ajouter tous les changement à l'index
$ git add .

Ajouter certain changement à l'index
$ git add -p <fichier>

Commit tous les changements local 
$ commit -a

Commit tous les changements indexés «staged changes»
$ git commit

Changer le dernier commit
$ git commit --amend

// Historique des commit
Afficher l'ensemble des commits, en commençant par les plus récents
$ git log


Afficher les modifications dans le temps pour un fichier spécifique
$ git log -p <le fichier>

Qui a changer quoi et quand dans un fichier
$ git blame <le fichier>

///

Les branches et étiquettes

Afficher l'ensemble des branches
$ git branch -av

Échanger la branche de tête (HEAD branch)
$ git checkout <une branche>

Créer une nouvelle branche basée à la TÊTE actuel
$ git branch <nouvelle branche>

Créer une nouvelle tracking branch basée sur une branche distante
$ git checkout --track <branche-distante>

Détruire une branche locale
$ git branch -d <branch>

Marquer le commit actuel par une étiquette (tag)
$ git tag <étiquette>

///

Mettre à jour et publier

Affiche tous les dépôts distant
$ git remote -v

Affiche de l'information sur un dépôt distant
$ git remote show <dépôt distant>

Ajouter un nouveau dépôt distant
$ git remote add <nom court> <url>

Télécharge tous les changements distant sans intégrer à la TÊTE
$ git fetch  <distant>

Télécharge les changements et fusionne/intègre à la TÊTE
$git pull <distant> <la branche>

Publier les changement local vers un distant
$ git push -dr <branche distante>

Détruire une branche distante
$git branch -dr <branch distante>

Publier vos étiquettes
$ git push --tags

////

Fusioner et rebaser

Fusionner une branche à la TÊTE courante
$ git merge <la branche>

Rebaser la TÊTE courante sur une branche
$ git rebase <la branche>

Annule un rebase
$ git rebase --abort

Continuer un rebase après avoir résolu un conflit
$ git rebase --continue

Utiliser la configuration de fusion pour résoudre un conflit
$ git mergetools

Utiliser votre éditeur pour manuellement résoudre les conflits et après la résolution marquer les fichiers comme résolue
$ git add <fichier-resolu>
$ git rm <fichier-résolu>

//

Annulation  (ctrl-Z)

Annuler tous les changement locals du répertoire de travail
$ git reset --hard HEAD

Annuler les changements locals sur un fichier spécifique
$ git checkout HEAD <le fichier>

Inverser un commit ( en produisant un nouveau commit par l'inversion des changement)
$ git revert <le commit>

Réinitialise le pointeur de TÊTE sur le commit précédent
$ git reset --hard <le commit>

... et préserve tous les changements comme des changements non indexé
$ git reset <commit>

... et préserve les changements local non committed
$ git reset --keep <commit>

///////////////////////////////

To remove a remote repository you enter:

git remote rm origin




